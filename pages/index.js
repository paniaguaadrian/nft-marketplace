// React Components
import { useEffect, useState } from 'react'
import axios from 'axios'

// Web3 - Interaction with Contracts
import { ethers } from 'ethers'
import Web3Modal from 'web3modal' // Way for us to connect to someones ethereum wallet.

/* ----------------------------------------------------------------------------------------
  When we deploy our project we'll need a reference to our market place address and nft address
  That's why we have created in our root file system a config.js file.
----------------------------------------------------------------------------------------- */
import { nftaddress, nftmarketaddress } from '../config'

/* ----------------------------------------------------------------------------------------
  ABI === JSON representation of the smart contracts, let us to interact from the client version with them.
  We can found those on the artifacts folder, this is autogenerated by hardhat when we execute a test or [npx hardhat compile]
----------------------------------------------------------------------------------------- */
import NFT from '../artifacts/contracts/NFT.sol/NFT.json'
import Market from '../artifacts/contracts/NFTMarket.sol/NFTMarket.json'

export default function Home() {
  // Initial state for the Component
  const [nft, setNFT] = useState([]) // Array of NFTs
  const [loadingState, setLoadingState] = useState('not-loaded')

  /* ----------------------------------------------------------------------------------------
  - Use useEffect to load the NFT's fetch function when the component is mounted.
  - loadNFTs will be a function to connect/call to our smart contract and fetch the NFT's
----------------------------------------------------------------------------------------- */
  useEffect(() => {
    loadNFTs()
  }, [])

  const loadNFTs = async () => {
    // We need a provider, also don't need to know about the user here. So we will be using a really standard provider
    const provider = new ethers.providers.JsonRpcProvider()

    // Configure the contract, reference of the actual NFT contract
    const tokenContract = new ethers.Contract(nftaddress, NFT.abi, provider)
    const marketContract = new ethers.Contract(
      nftmarketaddress,
      Market.abi,
      provider
    )
    // Get the data of that markets items. This function comes from the NFTMarket.sol contract.
    const data = await marketContract.fetchMarketItems()

    // Then we will map over all the items to get the specific item data
    const items = await Promise.all(
      data.map(async (i) => {
        // Call the token contract
        const tokenUri = await tokenContract.tokenURI(i.tokenId)
      })
    )
  }

  return (
    <div>
      <h1>Home</h1>
    </div>
  )
}
